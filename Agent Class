class Agent():
    def __init__(self, world):
        self.world = world
        self.grid_size = world.grid_size
        self.curr_position = (0, 0)
        self.position = (0, 0)
        self.score = 0
        self.alive = True
        self.gold_collected = 0
        self.visited = set()
        self.visited.add(self.curr_position)
        self.move()  

    def move_left(self):
        x, y = self.curr_position
        if y - 1 < 0:
            print("Move left out of bounds")
            return self.curr_position
        else:
            self.curr_position = (x, y - 1)
            self.visited.add(self.curr_position)
            self.score -= 1
            print("Moved to position:", self.curr_position)
            return self.curr_position

    def move_right(self):
        x, y = self.curr_position
        if y + 1 >= self.grid_size:
            print("Move right out of bounds")
            return self.curr_position
        else:
            self.curr_position = (x, y + 1)
            self.visited.add(self.curr_position)
            self.score -= 1
            print("Moved to position:", self.curr_position)
            return self.curr_position

    def move_up(self):
        x, y = self.curr_position
        if x - 1 < 0:
            print("Move up out of bounds")
            return self.curr_position
        else:
            self.curr_position = (x - 1, y)
            self.visited.add(self.curr_position)
            self.score -= 1
            print("Moved to position:", self.curr_position)
            return self.curr_position

    def move_down(self):
        x, y = self.curr_position
        if x + 1 >= self.grid_size:
            print("Move down out of bounds")
            return self.curr_position
        else:
            self.curr_position = (x + 1, y)
            self.visited.add(self.curr_position)
            self.score -= 1
            print("Moved to position:", self.curr_position)
            return self.curr_position

    def move(self):
        print("INSTRUCTIONS:")
        print("1 = Left, 2 = Right, 3 = Up, 4 = Down")

        while self.alive:
            try:
                choice = int(input("Enter choice: "))
            except ValueError:
                print("Invalid input. Enter a number between 1 and 4.")
                continue

            if choice == 1:
                pos = self.move_left()
            elif choice == 2:
                pos = self.move_right()
            elif choice == 3:
                pos = self.move_up()
            elif choice == 4:
                pos = self.move_down()
            else:
                print("Invalid choice.")
                continue

            x, y = pos
            room_data = self.world.get_cell_data(x, y)

            print("Room info:", room_data)

            # Check for death
            if room_data["Wumpus :"] or room_data["Pit :"]:
                self.alive = False
                self.score -= 100
                print("You died! ðŸª¦")
                if room_data["Wumpus :"]:
                    print("Killed by Wumpus!")
                else:
                    print("Fell into a pit!")
                break

            # Check for gold
            if room_data["Gold :"]:
                self.gold_collected += 1
                self.score += 100
                print("Gold collected! ðŸ’°")

            print("Current score:", self.score)
